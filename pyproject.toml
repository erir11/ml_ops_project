[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "ml_ops_project"
version = "0.0.1"
description = "A short description of the project."
authors = [
    { name = "erir11", email = "your@email.com" },
]
license = { file = "LICENSE" }
keywords = ["machine learning", "MLOps"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
]
readme = "README.md"
requires-python = ">=3.11"
dynamic = ["dependencies", "optional-dependencies"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[tool.setuptools.dynamic.optional-dependencies]
dev = {file = ['requirements_dev.txt']}

[tool.ruff]
line-length = 120
exclude = [
    ".git",
    ".github",
    ".pytest_cache",
    "__pycache__",
    "build",
    "dist"
]

[tool.ruff.lint]
# Enable pycodestyle (E), pyflakes (F), isort (I)
select = ["E", "F", "I"]
ignore = []
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["ml_ops_project"]

[tool.coverage.run]
omit = ["tests/*"]

[project.scripts]
prepare_data = "ml_ops_project.prepare_data:prepare_dataset"
train = "ml_ops_project.train:main"
predict = "ml_ops_project.predict:main"
